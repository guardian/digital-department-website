@mixin grid($unit) {
    .l-#{$unit}-grid {
        display: flex;
        flex-wrap: wrap;
        // Account for first gutter
        margin-left: -$gutter-width;
    }

    .l-#{$unit}-grid--1of2 > .l-#{$unit}-grid-cell {
        // We have to use `width` instead of `flex-basis` because we don't want
        // rows that don't wrap to have their children flex grow.
        width: 50%;
        flex: none;
        margin-bottom: $gutter-width;

        &:last-child,
        &:nth-last-child(2):nth-child(odd) {
            margin-bottom: 0;
        }
    }

    .l-#{$unit}-grid--1of3 > .l-#{$unit}-grid-cell {
        // We have to use `width` instead of `flex-basis` because we don't want
        // rows that don't wrap to have their children flex grow.
        width: 33.333%;
        flex: none;
        margin-bottom: $gutter-width;

        &:last-child,
        &:nth-last-child(2):nth-child(3n+2),
        &:nth-last-child(2):nth-child(3n+1),
        &:nth-last-child(3):nth-child(3n+1), {
            margin-bottom: 0;
        }
    }

    .l-#{$unit}-grid-cell {
        flex-grow: 1;
        flex-basis: 0;
        padding-left: $gutter-width;
        // Unset
        margin-bottom: 0;
    }

    .l-#{$unit}-2of3 {
        width: 66.666%;
        flex: none;
    }

    .l-#{$unit}-1of3 {
        width: 33.333%;
        flex: none;
    }
}
