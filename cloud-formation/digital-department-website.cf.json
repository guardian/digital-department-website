{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description" : "New unified Guardian Digital site'",
  "Parameters" : {
    "Subnets" : {
      "Type" : "CommaDelimitedList",
      "Description" : "The list of SubnetIds in your Virtual Private Cloud (VPC)",
      "Default" : ""
    },
    "Stack": {
      "Type": "String",
      "Description": "Applied directly as a tag",
      "Default" : "flexible"
    },
    "KeyName" : {
      "Description" : "The EC2 Key Pair to allow SSH access to the instance",
      "Type" : "String",
      "Default" : ""
    },
    "Stage": {
      "Type" : "String",
      "Description" : "Applied directly as a tag",
      "Default" : "CODE"
    },
    "InstanceType" : {
      "Type" : "String",
      "Description" : "EC2 instance type",
      "AllowedValues" : [ "t2.small", "t2.medium", "m3.medium" ],
      "ConstraintDescription" : "must be a valid EC2 instance type."
    },
    "ImageId": {
      "Description": "AMI ID",
      "Type": "String"
    },
    "ELBSSLCertificate": {
      "Description": "ELB SSL Certificate ARN",
      "Type": "String"
    }
  },
  "Resources" : {

    "VPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.248.144.0/22",
        "Tags": [
          {
            "Key": "Application",
            "Value": {
              "Ref": "AWS::StackId"
            }
          }
        ]
      }
    },


    "AutoScalingGroup" : {
      "Type" : "AWS::AutoScaling::AutoScalingGroup",
      "Properties" : {
        "AvailabilityZones" : { "Fn::GetAZs" : "" },
        "VPCZoneIdentifier" : { "Ref" : "Subnets" },
        "LaunchConfigurationName" : { "Ref" : "LaunchConfig" },
        "MinSize" : "2",
        "MaxSize" : "4",
        "DesiredCapacity" : "2",
        "LoadBalancerNames" : [ { "Ref" : "ElasticLoadBalancer" } ],
        "HealthCheckType" : "ELB",
        "HealthCheckGracePeriod" : 300,
        "Tags" : [
          { "Key" : "Stack", "Value" : { "Ref" : "Stack" }, "PropagateAtLaunch" : "true" },
          { "Key" : "App", "Value" : "digital-department-website", "PropagateAtLaunch" : "true" },
          { "Key" : "Stage", "Value" : { "Ref" : "Stage" }, "PropagateAtLaunch" : "true"  }
        ]
      }
    },

    "LaunchConfig" : {
      "Type" : "AWS::AutoScaling::LaunchConfiguration",
      "Properties" : {
        "ImageId" : { "Ref": "ImageId" },
        "SecurityGroups" : [ { "Ref" : "InstanceSecurityGroup" } ],
        "InstanceType" : { "Ref" : "InstanceType" },
        "KeyName" : { "Ref" : "KeyName" },
        "IamInstanceProfile": { "Ref" : "AppInstanceProfile" },
        "AssociatePublicIpAddress": true,
        "UserData" : { "Fn::Base64": {
          "Fn::Join":["\n", [
            "#!/bin/bash -ev",
            "apt-get -y update",
            "apt-get -y upgrade",
            "/opt/features/ssh-keys/initialise-keys-and-cron-job.sh -l -b github-team-keys -t Digital-CMS || true \n",
            "mkdir /etc/gu",
            "cat >/etc/gu/explainer.stage.conf << EOF",
            { "Fn::Join": [ "", [ "stage=", { "Ref": "Stage"} ] ] },
            "EOF",

            {"Fn::Join":["/", ["wget https://s3-eu-west-1.amazonaws.com/composer-dist", { "Ref" : "Stack" }, { "Ref" : "Stage" }, "explain-maker/explainerserver_0.1-SNAPSHOT_all.deb"]]},
            "dpkg -i explainerserver_0.1-SNAPSHOT_all.deb"
          ]]
        }}
      }
    },

    "AppRole" : {
      "Type" : "AWS::IAM::Role",
      "Properties":{
        "Path":"/",
        "AssumeRolePolicyDocument": {
          "Statement": [ {
            "Effect": "Allow",
            "Principal": { "Service": [ "ec2.amazonaws.com" ] },
            "Action": [ "sts:AssumeRole" ]
          }]
        },
        "Policies": [
          {
            "PolicyName": "PrivateBucket",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": ["s3:GetObject"],
                  "Resource": ["arn:aws:s3:::github-team-keys/*"]
                },
                {
                  "Effect":"Allow",
                  "Action": ["s3:ListBucket"],
                  "Resource":"arn:aws:s3:::github-team-keys"
                }
              ]
            }
          },
          {
            "PolicyName": "DynamoPolicy",
            "PolicyDocument": {
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [ "dynamodb:*" ],
                  "Resource": [ { "Fn::Join": [ "", [ "arn:aws:dynamodb:eu-west-1:743583969668:table/explainers-", { "Ref": "Stage" } ] ] } ]
                }
              ]
            }
          },
          {
            "PolicyName": "PushLogs",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [{
                "Effect": "Allow",
                "Action": ["logs:*"],
                "Resource": ["arn:aws:logs:*:*:*"]
              }]
            }
          },
          {
            "PolicyName": "PushMetrics",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement":[{
                "Effect":"Allow",
                "Action":["cloudwatch:PutMetricData"],
                "Resource":"*"
              }
              ]
            }
          }]
      }
    },
    "AppInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [ {
          "Ref": "AppRole"
        } ]
      }
    },

    "ElasticLoadBalancer" : {
      "Type" : "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties" : {
        "Listeners" : [ {
          "LoadBalancerPort": "443",
          "InstancePort": 9000,
          "Protocol": "HTTPS",
          "SSLCertificateId" : { "Ref" : "ELBSSLCertificate" }
        }],
        "SecurityGroups" : [ { "Ref" : "LoadBalancerSecurityGroup" } ],
        "Subnets" : { "Ref" : "Subnets" },
        "HealthCheck" : {
          "Target" : "HTTP:9000/healthcheck",
          "HealthyThreshold" : "2",
          "UnhealthyThreshold" : "10",
          "Interval" : "10",
          "Timeout" : "5"
        },
        "ConnectionDrainingPolicy": {
          "Enabled" : "true",
          "Timeout" : "60"
        }
      }
    },
    "LoadBalancerSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Permit incoming HTTPS access on port 443, egress to port 9000",
        "VpcId" : { "Ref" : "VPC" },
        "SecurityGroupIngress" : [
          { "IpProtocol": "tcp", "FromPort": "443", "ToPort": "443", "CidrIp": "0.0.0.0/0" }
        ],
        "SecurityGroupEgress" : [
          { "IpProtocol": "tcp", "FromPort": "9000", "ToPort": "9000", "CidrIp": "0.0.0.0/0" }
        ]
      }
    },
    "InstanceSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Open up SSH access and enable HTTP access on the configured port",
        "VpcId" : { "Ref" : "VpcId" },
        "SecurityGroupIngress" : [
          { "IpProtocol": "tcp", "FromPort": "22", "ToPort": "22", "CidrIp": "77.91.248.0/21" },
          { "IpProtocol": "tcp", "FromPort": "9000", "ToPort": "9000", "CidrIp": "77.91.248.0/21" },
          { "IpProtocol": "tcp", "FromPort": "9000", "ToPort": "9000", "SourceSecurityGroupId" : { "Ref" : "LoadBalancerSecurityGroup" } }
        ]
      }
    }
  }
}
